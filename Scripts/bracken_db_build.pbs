#!/bin/bash

#########################################################
#
# Platform: NCI Gadi HPC
# Description: see https://github.com/Sydney-Informatics-Hub/Shotgun-Metagenomics-Analysis
#
# Author/s: Cali Willet
# cali.willet@sydney.edu.au
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance
# <or e.g. bioinformatics assistance of <PERSON>> of Sydney Informatics
# Hub and resources and services from the National Computational
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
#
#########################################################

#PBS -P <project>
#PBS -N brackendb
#PBS -l walltime=01:00:00
#PBS -l ncpus=48
#PBS -l mem=190GB
#PBS -q normal
#PBS -W umask=022
#PBS -l wd
#PBS -o ./Logs/bracken_db_build.o
#PBS -e ./Logs/bracken_db_build.e
#PBS -l storage=scratch/<project>

module load python3/3.7.4 kraken2/2.0.8-beta bracken/2.6.0

src=$(which bracken)
src=${src/%bracken/src}

KRAKEN_DB=${PWD}/kraken2_standard_db_build_<date> ###UPDATE TO YOUR KRAKEN2 DB
KMER_LEN=35
READ_LEN=150

printf "Using database ${KRAKEN_DB}\n"

printf "Generating the Bracken database file (databaseXmers.kmer_distrib)\n"

printf "\n$(date): Searching all library input sequences against the database\n"
cd $KRAKEN_DB
kraken2 --db ${KRAKEN_DB} \
	--threads=${NCPUS} <( find -L library -name "*.fna" -exec cat {} + )  \
	> database.kraken

printf "\n$(date): Computing classifications for each perfect read from one of the input sequences\n"
${src}/kmer2read_distr \
	--seqid2taxid ${KRAKEN_DB}/seqid2taxid.map \
	--taxonomy ${KRAKEN_DB}/taxonomy \
	--kraken database.kraken \
	--output database${READ_LEN}mers.kraken \
	-k ${KMER_LEN} \
	-l ${READ_LEN} \
	-t ${NCPUS}


printf "\n$(date): Generating the kmer distribution file\n"
python3 ${src}/generate_kmer_distribution.py \
	-i database${READ_LEN}mers.kraken \
	-o database${READ_LEN}mers.kmer_distrib
